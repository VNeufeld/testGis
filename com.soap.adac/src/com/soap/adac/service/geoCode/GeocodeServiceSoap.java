
package com.soap.adac.service.geoCode;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "GeocodeServiceSoap", targetNamespace = "http://ADAC.ITP.WebServices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface GeocodeServiceSoap {


    /**
     * 
     * @param postAdr
     * @param erweiterteSuche
     * @param vListe
     * @param geoCodeResult
     * @param fehlerText
     * @param koordinatenformat
     * @param sqlSuche
     * @param karte
     * @param anzVorschlaege
     */
    @WebMethod(operationName = "GeoCode", action = "http://ADAC.ITP.WebServices/GeoCode")
    @RequestWrapper(localName = "GeoCode", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCode")
    @ResponseWrapper(localName = "GeoCodeResponse", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCodeResponse")
    public void geoCode(
        @WebParam(name = "postAdr", targetNamespace = "http://ADAC.ITP.WebServices/")
        PostAdresse postAdr,
        @WebParam(name = "AnzVorschlaege", targetNamespace = "http://ADAC.ITP.WebServices/", mode = WebParam.Mode.INOUT)
        Holder<Integer> anzVorschlaege,
        @WebParam(name = "vListe", targetNamespace = "http://ADAC.ITP.WebServices/", mode = WebParam.Mode.INOUT)
        Holder<ArrayOfPostAdresse> vListe,
        @WebParam(name = "karte", targetNamespace = "http://ADAC.ITP.WebServices/")
        Karte karte,
        @WebParam(name = "erweiterteSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        boolean erweiterteSuche,
        @WebParam(name = "SQLSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        boolean sqlSuche,
        @WebParam(name = "Koordinatenformat", targetNamespace = "http://ADAC.ITP.WebServices/")
        KoordinatenFormat koordinatenformat,
        @WebParam(name = "FehlerText", targetNamespace = "http://ADAC.ITP.WebServices/", mode = WebParam.Mode.INOUT)
        Holder<String> fehlerText,
        @WebParam(name = "GeoCodeResult", targetNamespace = "http://ADAC.ITP.WebServices/", mode = WebParam.Mode.OUT)
        Holder<ReturnCode> geoCodeResult);

    /**
     * 
     * @param erweiterteSuche
     * @param strasse
     * @param ort
     * @param plz
     * @param lkz
     * @param koordinatenformat
     * @param sqlSuche
     * @param karte
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GeoCodeASP", action = "http://ADAC.ITP.WebServices/GeoCodeASP")
    @WebResult(name = "GeoCodeASPResult", targetNamespace = "http://ADAC.ITP.WebServices/")
    @RequestWrapper(localName = "GeoCodeASP", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCodeASP")
    @ResponseWrapper(localName = "GeoCodeASPResponse", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCodeASPResponse")
    public String geoCodeASP(
        @WebParam(name = "LKZ", targetNamespace = "http://ADAC.ITP.WebServices/")
        String lkz,
        @WebParam(name = "PLZ", targetNamespace = "http://ADAC.ITP.WebServices/")
        String plz,
        @WebParam(name = "Ort", targetNamespace = "http://ADAC.ITP.WebServices/")
        String ort,
        @WebParam(name = "Strasse", targetNamespace = "http://ADAC.ITP.WebServices/")
        String strasse,
        @WebParam(name = "karte", targetNamespace = "http://ADAC.ITP.WebServices/")
        String karte,
        @WebParam(name = "erweiterteSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        String erweiterteSuche,
        @WebParam(name = "SQLSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        String sqlSuche,
        @WebParam(name = "Koordinatenformat", targetNamespace = "http://ADAC.ITP.WebServices/")
        String koordinatenformat);

    /**
     * 
     * @param europeOnly
     * @param erweiterteSuche
     * @param ort
     * @param koordinatenformat
     * @param sqlSuche
     * @param karte
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GeoCodeUngenauASP", action = "http://ADAC.ITP.WebServices/GeoCodeUngenauASP")
    @WebResult(name = "GeoCodeUngenauASPResult", targetNamespace = "http://ADAC.ITP.WebServices/")
    @RequestWrapper(localName = "GeoCodeUngenauASP", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCodeUngenauASP")
    @ResponseWrapper(localName = "GeoCodeUngenauASPResponse", targetNamespace = "http://ADAC.ITP.WebServices/", className = "geoCode.GeoCodeUngenauASPResponse")
    public String geoCodeUngenauASP(
        @WebParam(name = "Ort", targetNamespace = "http://ADAC.ITP.WebServices/")
        String ort,
        @WebParam(name = "karte", targetNamespace = "http://ADAC.ITP.WebServices/")
        String karte,
        @WebParam(name = "erweiterteSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        String erweiterteSuche,
        @WebParam(name = "SQLSuche", targetNamespace = "http://ADAC.ITP.WebServices/")
        String sqlSuche,
        @WebParam(name = "Koordinatenformat", targetNamespace = "http://ADAC.ITP.WebServices/")
        String koordinatenformat,
        @WebParam(name = "europeOnly", targetNamespace = "http://ADAC.ITP.WebServices/")
        String europeOnly);

}
